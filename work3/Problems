Problem A
括号匹配
时限：1000ms 内存限制：10000K 总时限：3000ms
描述：


假设一个算术表达式中可以包含三种括号：圆括号"("和")",方括号"["和"]"和花括号"{"和"}"，且这三种括号可按任意的次序嵌套使用，如：...[...(...)...{...{...}...[...]...}...]...，编写程序判别给定表达式中所含括号是否正确配对出现。

输入：


输入一个由这几种括号组成的字符串，字符串长度不大于100。

输出：


若正确则输出"Yes"，否则输出"No"。注意字母的大小写，结尾带回车。

输入样例：


{()[]}{}
输出样例：


Yes


Problem B
四则元算表达式转换为逆波兰式
时限：1000ms 内存限制：10000K 总时限：3000ms
描述：


假设表达式由单字母整数类型变量和双目四则运算符构成（"+","-","*","/"）,写一个程序，将一个通常书写形式且书写正确的表达式转换为逆波兰式。

输入：


输入一个完整的正确的四则运算表达式，长度不超过100（其中仅含有："("、")"、"a"、"b"和"c"五种字符）。

输出：


输出这个表达式的逆波兰表达式。注意结尾带回车。

输入样例：


输入样例一：(a+b)输入样例二：((a+b)*(a-c))输入样例三：((a*(b+c))-(a/c))
输出样例：


输出样例一：ab+输出样例二：ab+ac-*输出样例三：abc+*ac/-


Problem C
rear和length表示的循环队列
时限：1000ms 内存限制：10000K 总时限：3000ms
描述：


假设将循环队列定义为：以与变量rear和length分别指示循环队列中队尾元素的位置和内含元素的个数。试给出此循环队列的队满条件，并写出相应的入队列和出队列的算法（在出队列的算法中要返回队头元素）。

输入：


先输入一个不大于100的正整数n（输入数据个数）和m（循环队列数组的大小），再输入n个整数，其中输入0表示出队。

输出：


要求用循环队列实现，队满时如有入队则输出"No"并丢掉此元素，出队时输出这个元素。注意：这种表示方法队列中可以存储m个元素！

输入样例：


10 5
2 6 0 56 89 34 2322 25 0 10
输出样例：


2
No
6


Problem D
k阶斐波那契数列
时限：1000ms 内存限制：10000K 总时限：3000ms
描述：


已知K阶斐波那契数列定义为：
f0 = 0,  f1 = 0, … , fk-2 = 0, fk-1 = 1;
fn = fn-1 + fn-2 + … + fn-k , n = k , k + 1, …
利用循环队列编写求k阶斐波那契数列中前n+1项（f0, f1, f2,…, fn）的算法，要求满足：fn<=max,并且fn+1>max,其中max为某个约定的常数。（注意：本题所用循环队列的容量仅为k，则在算法执行结束时，留在队列中的元素应是所求k阶斐波那契序列中的最后k项fn-k-1 , fn-k, …, fn）。


输入：


输入表示阶数的k（2<=  k  <= 100）以及表示某个常数的max（0 <= max <= 100000）。

输出：


输出满足条件的项n（n从0开始计数），占一行； 
以及第n项的值，占一行；
输出一个回车符。


输入样例：


4 10000
输出样例：


17
5536
